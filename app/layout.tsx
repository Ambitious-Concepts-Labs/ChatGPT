import { getServerSession } from "next-auth";
import ClientProvider from "../components/ClientProvider";
import { SessionProvider } from "../components/SessionProvider";
import { authOptions } from "../pages/api/auth/[...nextauth]";
import "../styles/globals.css";
import Head from "./head";
import { Metadata } from "next";
import { AuthContextProvider } from "./context/AuthContext";

export async function getServerSideProps(context) {
  const { req, query } = context;
  const session = await getServerSession(authOptions);
  const { callbackUrl } = query;
  console.log(callbackUrl, "test");
  console.log(session, "session");
  if (session) {
    return {
      redirect: {
        destination: "/dashboard", // some destination '/dashboard' Ex,
        permanent: false,
      },
    };
  } else if (!session) {
    return {
      redirect: {
        destination: "/",
      },
    };
  }

  return {
    props: {
      callbackUrl: "/dashboard",
    },
  };
}

export const metadata: Metadata = {
  title: "Next.js",
  description: "Generated by Next.js",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getServerSession(authOptions);
  return (
    <html lang="en">
      <Head />
      <body>
        <AuthContextProvider>
          <SessionProvider session={session}>
            <ClientProvider />
            <main>{children}</main>
          </SessionProvider>
        </AuthContextProvider>
      </body>
    </html>
  );
}
